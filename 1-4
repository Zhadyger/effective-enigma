import React from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import HomeScreen from './screens/HomeScreen';
import RecommendationScreen from './screens/RecommendationScreen';

const Stack = createStackNavigator();

export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Home">
        <Stack.Screen name="Home" component={HomeScreen} />
        <Stack.Screen name="Recommendation" component={RecommendationScreen} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}
import React, { useState } from 'react';
import { View, Text, TextInput, Button } from 'react-native';

const HomeScreen = ({ navigation }) => {
  const [childAge, setChildAge] = useState('');
  const [specialNeed, setSpecialNeed] = useState('');

  const handleSubmit = () => {
    // Пример отправки данных для получения рекомендаций
    navigation.navigate('Recommendation', { childAge, specialNeed });
  };

  return (
    <View style={{ flex: 1, justifyContent: 'center', padding: 20 }}>
      <Text>Enter Child's Age:</Text>
      <TextInput
        style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 20 }}
        keyboardType="numeric"
        value={childAge}
        onChangeText={setChildAge}
      />
      <Text>Enter Special Need:</Text>
      <TextInput
        style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 20 }}
        value={specialNeed}
        onChangeText={setSpecialNeed}
      />
      <Button title="Get Recommendations" onPress={handleSubmit} />
    </View>
  );
};

export default HomeScreen;
import React from 'react';
import { View, Text } from 'react-native';

const RecommendationScreen = ({ route }) => {
  const { childAge, specialNeed } = route.params;

  // Здесь можно использовать логику для предоставления рекомендаций
  const recommendations = [
    `Child Age: ${childAge}, Special Need: ${specialNeed}`,
    'Suggested Career: Teacher Assistant for Special Education',
    'Suggested Career: Occupational Therapist',
  ];

  return (
    <View style={{ flex: 1, justifyContent: 'center', padding: 20 }}>
      <Text>Recommended Careers for Your Child:</Text>
      {recommendations.map((rec, index) => (
        <Text key={index} style={{ marginVertical: 10 }}>
          {rec}
        </Text>
      ))}
    </View>
  );
};

export default RecommendationScreen;
const express = require('express');
const bodyParser = require('body-parser');

const app = express();
const port = 3000;

app.use(bodyParser.json());

app.post('/getRecommendations', (req, res) => {
  const { childAge, specialNeed } = req.body;

  // Логика для создания рекомендаций
  const recommendations = [
    `Child Age: ${childAge}, Special Need: ${specialNeed}`,
    'Suggested Career: Teacher Assistant for Special Education',
    'Suggested Career: Occupational Therapist',
  ];

  res.json({ recommendations });
});

app.listen(port, () => {
  console.log(`Server running at http://localhost:${port}`);
});
